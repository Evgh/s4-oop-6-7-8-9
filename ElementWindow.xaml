<Window x:Class="s4_oop_6_7_8_9.ElementWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:s4_oop_6_7_8_9"
        mc:Ignorable="d"
        MinHeight="600" MinWidth="850">

    <Window.Resources>
        <local:CategoryToIntConverter x:Key="categoryConverter"/>
        <BooleanToVisibilityConverter x:Key="booleanToVisibility"/>
        <Style x:Key="WinStyle">
            <Setter Property="Control.FontFamily" Value="Lato"/>
            <Setter Property="Control.FontSize" Value="14"/>
        </Style>
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#FF8ABA8A"/>
            <Setter Property="Control.FontFamily" Value="Lato"/>
        </Style>
    </Window.Resources>
    
    <Grid Margin="10" Style="{StaticResource WinStyle}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="6*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--Место для кнопок перехода в разные состояния --> 
        <Grid Grid.Column="1" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Button Content="{DynamicResource buttonAddNew}" Grid.Column="0" Margin="10" Style="{StaticResource ButtonStyle}"
                    Visibility="{Binding IsAddButtonVisible, Converter={StaticResource booleanToVisibility}}"
                    Command="{Binding AddCommand}" Click="CloseWindow"/>

            <Button Content="{DynamicResource buttonReset}" Grid.Column="1" Margin="10" Style="{StaticResource ButtonStyle}"
                    Visibility="{Binding IsResetButtonVisible, Converter={StaticResource booleanToVisibility}}"
                    Command="{Binding ResetCommand}" Click="CloseWindow"/>

            <Button Content="{DynamicResource buttonSave}" Grid.Column="0" Margin="10" Style="{StaticResource ButtonStyle}"
                    Visibility="{Binding IsSaveButtonVisible, Converter={StaticResource booleanToVisibility}}"
                    Click="CloseWindow"/>
        </Grid>
        <Button Content="{DynamicResource buttonDelete}" Grid.Column="1" Grid.Row="2" Margin="10" Style="{StaticResource ButtonStyle}"
                    Visibility="{Binding IsDeleteButtonVisible, Converter={StaticResource booleanToVisibility}}" 
                    Command="{Binding DeleteCommand}" CommandParameter="{Binding SelectedItem}" Click="CloseWindow"/>

        <!-- Непосредственно забинженные данные -->
        <Button Grid.Row="1" Grid.Column="0" Margin="10" Command="{Binding OpenImageCommand}">
            <Image DataContext="{Binding SelectedItem}" Source="{Binding Image}" Stretch="UniformToFill"/>
        </Button>
        <StackPanel Grid.Row="1" Grid.Column="1" Margin="10" DataContext="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
            <TextBox x:Name="textBoxName" FontSize="30" Text="{Binding ShortName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
            <TextBox x:Name="textBoxFullName" Margin="0 0 0 10" Text="{Binding FullName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

            <DockPanel Margin="0 0 0 10">
                <TextBox x:Name="textBoxPrice" Text="{Binding Price, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="24" Width="100"/>
                <TextBlock Text="{DynamicResource textBlockCurrency}" FontSize="24"/>
            </DockPanel>
            
            <TextBlock Text="{DynamicResource textBlockCategory}"/>
            <ComboBox Margin="0 0 0 10" SelectedIndex="{Binding Category, Converter={StaticResource categoryConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                <ComboBoxItem Content="Цветущие" />
                <ComboBoxItem Content="Лиственные"/>
                <ComboBoxItem Content="Плодовые"/>
                <ComboBoxItem Content="Насекомоядные"/>
                <ComboBoxItem Content="Бонсай"/>
                <ComboBoxItem Content="Суккуленты"/>
                <ComboBoxItem Content="Грунт"/>
                <ComboBoxItem Content="Аксессуары"/>
            </ComboBox>
            
            <TextBlock Text="{DynamicResource textBlockDescription}"/>
            <TextBox Text="{Binding Description, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="0 0 0 10"/>

            <TextBlock Text="{DynamicResource textBlockHeight}"/>
            <DockPanel>
                <TextBlock Text="{Binding ElementName=sliderHeight, Path=Value, Mode=TwoWay}" Width="30"/>
                <Slider x:Name="sliderHeight" Value="{Binding Height, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Minimum="0" Maximum="100" TickFrequency="1" IsSnapToTickEnabled="True" SelectionStart="0" Height="30" IsSelectionRangeEnabled="True"/>
            </DockPanel>

            <TextBlock Text="{DynamicResource textBlockDiameter}"/>
            <DockPanel>
                <TextBlock Text="{Binding ElementName=sliderWidth, Path=Value, Mode=TwoWay}" Width="30"/>
                <Slider x:Name="sliderWidth" Value="{Binding Diameter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Minimum="0" Maximum="100" TickFrequency="1" IsSnapToTickEnabled="True" SelectionStart="0" Height="30" IsSelectionRangeEnabled="True"/>
            </DockPanel>

            <TextBlock Text="{DynamicResource textBlockAvailability}"/>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{DynamicResource textBlockAmount}" Margin="0 0 10 0"/>
                <TextBox Width="50" Text="{Binding Availability, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
            </StackPanel>
        </StackPanel>


    </Grid>
</Window>
