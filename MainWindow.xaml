<Window x:Class="s4_oop_6_7_8_9.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:s4_oop_6_7_8_9"
        mc:Ignorable="d"
        Title="{DynamicResource h1}" MinHeight="640" MinWidth="1136">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="myConverter"/>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{Binding OpenFileCommand}" Key="O" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding SaveFileCommand}" Key="S" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding ClearAllCommand}" Key="Delete" Modifiers="Ctrl"/>
    </Window.InputBindings>

    <Window.ContextMenu>
        <ContextMenu>
            <MenuItem Header="Добавить запись" Command="{Binding ToAddModeCommand}" Click="OpenElementWindow"/>
            <MenuItem Header="Очистить список" Command="{Binding ClearAllCommand}"/>
        </ContextMenu>
    </Window.ContextMenu>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25" />
            <RowDefinition Height="*"/>
            <RowDefinition Height="10*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.2*"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Menu Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
            <MenuItem Header="{DynamicResource menuFile}">
                <MenuItem Header="{DynamicResource menuOpen}" Command="{Binding OpenFileCommand}"/>
                <MenuItem Header="{DynamicResource menuSave}" Command="{Binding SaveFileCommand}"/>
                <MenuItem Header="{DynamicResource menuClear}" Command=""/>
            </MenuItem>
            <MenuItem Header="{DynamicResource menuEdit}">
                <MenuItem Header="{DynamicResource menuUndo}" Command="Undo"/>
                <MenuItem Header="{DynamicResource menuRedo}" Command="Redo"/>
            </MenuItem>
            <MenuItem Header="{DynamicResource menuLanguage}" x:Name="menuLanguage"/>
            <MenuItem Header="{DynamicResource menuSearch}" Command="Search"/>
        </Menu>

        <TextBlock Text="{DynamicResource h1}" Grid.Row="1" Grid.Column="0" FontSize="20" Margin="10"/>
        <Button Grid.Row="1" Grid.Column="1"  Click="OpenElementWindow" Command="{Binding ToAddModeCommand}">
            <Image Source="resources/icons/add.png"/>
        </Button>

        <!-- Непосредственно контейнер для данных -->
        <ScrollViewer Grid.Row="2" Grid.Column="1">
            <DataGrid AutoGenerateColumns="False" ColumnWidth="*" IsReadOnly="True" SelectionMode="Single"
                      ItemsSource="{Binding Items, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedItem}">

                <DataGrid.InputBindings>
                    <KeyBinding Command="{Binding DeleteCommand}" CommandParameter="{Binding SelectedItem}" Key="Delete"/>
                </DataGrid.InputBindings>

                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{DynamicResource datagridContextMenuEdit}" Click="OpenElementWindow" Command="{Binding ToEditModeCommand}"/>
                        <MenuItem Header="{DynamicResource datagridContextMenuDelete}" Command="{Binding DeleteCommand}" CommandParameter="{Binding SelectedItem}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>

                <DataGrid.RowStyle >
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Visibility" Value="{Binding Path=ItemVisibility, Converter={StaticResource ResourceKey=myConverter}, UpdateSourceTrigger=PropertyChanged}" />
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Path=ShortName, UpdateSourceTrigger=PropertyChanged}" >
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource datagridColumnName}" ></TextBlock>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=FullName, UpdateSourceTrigger=PropertyChanged}" >
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource datagridColumnFullName}" ></TextBlock>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=Category, UpdateSourceTrigger=PropertyChanged}" >
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource datagridColumnCategory}" ></TextBlock>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=Price, UpdateSourceTrigger=PropertyChanged}" >
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource datagridColumnPrice}" ></TextBlock>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=Height, UpdateSourceTrigger=PropertyChanged}" >
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource datagridColumnHeight}" ></TextBlock>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=Diameter, UpdateSourceTrigger=PropertyChanged}" >
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource datagridColumnDiameter}" ></TextBlock>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=Availability, UpdateSourceTrigger=PropertyChanged}" >
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource datagridColumnAvailability}" ></TextBlock>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=Description, UpdateSourceTrigger=PropertyChanged}" >
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource datagridColumnDescription}" ></TextBlock>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.Header>
                            <TextBlock Text="{DynamicResource datagridColumnImage}" ></TextBlock>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Source="{Binding Image}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </ScrollViewer>

        <!-- Фильтры -->
        <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="2" Margin="5">
            <Expander Header="{DynamicResource filterCategory}" IsExpanded="True">
                <StackPanel Margin="5">
                    <CheckBox Content="{DynamicResource categoryBlooming}" DataContext="{Binding Category}" IsChecked="{Binding Path=Blooming, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <CheckBox Content="{DynamicResource categoryDeciduous}" DataContext="{Binding Category}" IsChecked="{Binding Path=Decidious, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <CheckBox Content="{DynamicResource categoryFruit}" DataContext="{Binding Category}" IsChecked="{Binding Path=Fruit, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <CheckBox Content="{DynamicResource categoryPredator}" DataContext="{Binding Category}" IsChecked="{Binding Path=Predator, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <CheckBox Content="{DynamicResource categoryBonsai}" DataContext="{Binding Category}" IsChecked="{Binding Path=Bonsai, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <CheckBox Content="{DynamicResource categorySucculent}" DataContext="{Binding Category}" IsChecked="{Binding Path=Succulent, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <CheckBox Content="{DynamicResource categoryPrimiting}" DataContext="{Binding Category}" IsChecked="{Binding Path=Primiting, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <CheckBox Content="{DynamicResource categoryAccessories}" DataContext="{Binding Category}" IsChecked="{Binding Path=Accessories, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </StackPanel>
            </Expander>

            <Expander Header="{DynamicResource filterPrice}" IsExpanded="True">
                <StackPanel Orientation="Horizontal" Margin="5">
                    <TextBox MinWidth="70" DataContext="{Binding Price}" Text="{Binding Path=MinPrice, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <TextBlock Text="-"/>
                    <TextBox MinWidth="70" DataContext="{Binding Price}" Text="{Binding Path=MaxPrice, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </StackPanel>
            </Expander>

            <Expander Header="{DynamicResource filterHeight}" IsExpanded="True">
                <StackPanel Orientation="Horizontal" Margin="5">
                    <TextBox MinWidth="70" DataContext="{Binding Height}" Text="{Binding Path=MinHeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <TextBlock Text="-"/>
                    <TextBox MinWidth="70" DataContext="{Binding Height}" Text="{Binding Path=MaxHeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </StackPanel>
            </Expander>

            <Expander Header="{DynamicResource filterDiameter}" IsExpanded="True">
                <StackPanel Orientation="Horizontal" Margin="5">
                    <TextBox MinWidth="70" DataContext="{Binding Diameter}" Text="{Binding Path=MinDiameter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <TextBlock Text="-"/>
                    <TextBox MinWidth="70" DataContext="{Binding Diameter}" Text="{Binding Path=MaxDiameter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </StackPanel>
            </Expander>

            <Expander Header="{DynamicResource filterAvailability}" IsExpanded="True">
                <StackPanel Margin="5">
                    <CheckBox Content="{DynamicResource AvailabilityYes}" DataContext="{Binding Availability}" IsChecked="{Binding Path=Available, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <CheckBox Content="{DynamicResource AvailabilityNo}" DataContext="{Binding Availability}" IsChecked="{Binding Path=Order, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </StackPanel>
            </Expander>

            <Button Content="{DynamicResource buttonApplyFilters}" Command="{Binding FilterCommand}" Margin="5 5 5 1"/>
            <Button Content="{DynamicResource buttonClearFilters}" Command="{Binding ClearFilterCommand}" Margin="5 1 5 5"/>

        </StackPanel>

    </Grid>
</Window>
